function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function i(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),t}function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t){return function(t){if(Array.isArray(t))return u(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||h(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(t,e){if(t){if("string"==typeof t)return u(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(t,e):void 0}}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function c(t,e){var n;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(n=h(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var i=0,o=function(){};return{s:o,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,s=!0,a=!1;return{s:function(){n=t[Symbol.iterator]()},n:function(){var t=n.next();return s=t.done,t},e:function(t){a=!0,r=t},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw r}}}}var f=function(){function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;e(this,t),this.innovation=0,this.nodes=n,this.history=[]}return i(t,[{key:"getNodeId",value:function(t){var e,n=c(this.history);try{for(n.s();!(e=n.n()).done;){var i=e.value;if(i.from===t.from.id&&i.to===t.to.id){if(i.node)return i.node;var o=this.nodes++;return i.node=o,o}}}catch(t){n.e(t)}finally{n.f()}return console.error("node id error"),!1}},{key:"getInnovation",value:function(t){var e,n=c(this.history);try{for(n.s();!(e=n.n()).done;){var i=e.value;if(i.from===t.from.id&&i.to===t.to.id)return i.innovation}}catch(t){n.e(t)}finally{n.f()}return this.innovation++,this.history.push({innovation:this.innovation,from:t.from.id,to:t.to.id}),this.innovation}}]),t}(),l=function(t){return t[Math.floor(Math.random()*t.length)]},d=function(t,e){return Math.random()*(e-t)+t};var v=function(t,e,n){return Math.min(Math.max(n,t),e)},m={selectRandom:l,random:d,gaussian:function(){var t,e,n,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;do{e=d(-1,1),t=d(-1,1),n=Math.pow(t,2)+Math.pow(e,2)}while(0===n||n>=1);return(n=Math.sqrt(-2*Math.log(n)/n))*t*o+i},clamp:v,shuffle:function(t){for(var e,n,i=a(t),o=i.length;0!==o;)n=Math.floor(Math.random()*o),e=i[o-=1],i[o]=i[n],i[n]=e;return i},wrapNumber:function(t,e,n){var i=e-t+1;return((n-t)%i+i)%i+t}},p=function(){function t(n,i,o){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;e(this,t),this.from=n,this.to=i,this.weight=o,this.enabled=r,this.innovation=s,this.to.addInConnection(this),this.from.addOutConnection(this)}return i(t,[{key:"disable",value:function(){this.enabled=!1}},{key:"enable",value:function(){this.enabled=!0}},{key:"mutate",value:function(t){var e=t.mutation,n=e.power,i=e.weightPerturbed,o=e.maxWeight;Math.random()<i?(this.weight+=d(-n,n),this.weight=v(-o,o,this.weight)):this.weight=d(-n,n)}},{key:"copy",value:function(e,n){return new t(e,n,this.weight,this.enabled,this.innovation)}}]),t}(),y=function(){function t(n){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;e(this,t),this.type=n,this.id=i,this.in=[],this.out=[],this.output=0}return i(t,[{key:"activation",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4.9;return 1/(1+Math.exp(-e*t))}},{key:"activate",value:function(){var t=this.in.reduce((function(t,e){return t+e.from.output*e.weight*e.enabled}),0);this.output=this.activation(t)}},{key:"addInConnection",value:function(t){this.in.push(t)}},{key:"addOutConnection",value:function(t){this.out.push(t)}},{key:"copy",value:function(){return new t(this.type,this.id)}}]),t}(),g="BIAS",b={BIAS:g,INPUT:"INPUT",OUTPUT:"OUTPUT",HIDDEN:"HIDDEN"},w=function(){function n(){e(this,n),this.nodes=new Map,this.connections=new Map,this.score=0,this.fitness=0,this.originalFitness=0}return i(n,[{key:"buildNetwork",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,o=new y(g,0);this.nodes.set(o.id,o);for(var r=0;r<t;r++){var s=new y("INPUT",r+1);this.nodes.set(s.id,s)}for(var a=0;a<e;a++){var h=new y("OUTPUT",a+t+1);this.nodes.set(h.id,h)}if(this.initializeNetwork(),n&&i){var u,f=c(this.inputs);try{for(f.s();!(u=f.n()).done;){var l,v=u.value,m=c(this.outputs);try{for(m.s();!(l=m.n()).done;){var b=l.value;this.addConnection(new p(v,b,d(-i.mutation.power,i.mutation.power)),n)}}catch(t){m.e(t)}finally{m.f()}}}catch(t){f.e(t)}finally{f.f()}}}},{key:"initializeNetwork",value:function(){var t=this;this.inputs=[],this.outputs=[],this.nodes.forEach((function(e){e.type===g||"INPUT"===e.type?t.inputs.push(e):"OUTPUT"===e.type&&t.outputs.push(e)})),this.sortNetwork()}},{key:"copy",value:function(){var t=new n;return this.nodes.forEach((function(e,n){t.nodes.set(n,e.copy())})),this.connections.forEach((function(e,n){var i=t.nodes.get(e.from.id),o=t.nodes.get(e.to.id);t.connections.set(n,e.copy(i,o))})),t.initializeNetwork(),t}},{key:"activate",value:function(t){var e=[1].concat(a(t));return this.inputs.forEach((function(t){return t.output=e.shift()})),this.hidden.forEach((function(t){return t.activate()})),this.outputs.forEach((function(t){return t.activate()})),this.outputs.map((function(t){return t.output}))}},{key:"sortNetwork",value:function(){this.hidden=[];for(var t=new Set,e=a(this.inputs);e.length;){var n=e.shift();"HIDDEN"===n.type&&this.hidden.push(n);var i,o=c(n.out);try{for(o.s();!(i=o.n()).done;){var r=i.value;t.add(r.innovation),r.to.in.every((function(e){return t.has(e.innovation)}))&&e.push(r.to)}}catch(t){o.e(t)}finally{o.f()}}var s=a(this.nodes.values()).filter((function(t){return"HIDDEN"===t.type}));this.hidden.length!==s.length&&(console.error("network has a cycle"),console.error(s.map((function(t){return{id:t.id}}))," | ",this.hidden.map((function(t){return{id:t.id}}))))}},{key:"addNode",value:function(t,e,n){return t.id=n.getNodeId(e),!this.nodes.has(t.id)&&(this.nodes.set(t.id,t),!0)}},{key:"addConnection",value:function(t,e){t.innovation=e.getInnovation(t),this.connections.set(t.innovation,t)}},{key:"connectionExists",value:function(t,e){return a(this.connections.values()).some((function(n){return n.from.id===t.id&&n.to.id===e.id}))}},{key:"isRecurrent",value:function(t,e){for(var n=a(e.out);n.length;){var i=n.shift();if(i.to.id===t.id)return!0;n.push.apply(n,a(i.to.out))}return!1}},{key:"mutateAddNode",value:function(t){var e=a(this.connections.values()).filter((function(t){return t.enabled})),n=l(e);if(n){var i=new y("HIDDEN");return this.addNode(i,n,t)&&(n.disable(),this.addConnection(new p(n.from,i,1),t),this.addConnection(new p(i,n.to,n.weight),t)),!0}return!1}},{key:"mutateAddConnection",value:function(e,n){for(var i=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:20,r=Array.from(this.nodes.values()),s=function(){var t=l(r.filter((function(t){return"OUTPUT"!==t.type}))),o=l(r.filter((function(e){return"INPUT"!==e.type&&e.type!==g&&e!==t})));if(t&&o&&!i.connectionExists(t,o)&&!i.isRecurrent(t,o)){var s=new p(t,o,d(-n.mutation.power,n.mutation.power));return i.addConnection(s,e),{v:!0}}};o--;){var a=s();if("object"===t(a))return a.v}return!1}},{key:"mutateWeights",value:function(t){this.connections.forEach((function(e){e.enabled&&e.mutate(t)}))}},{key:"mutateReEnable",value:function(){return this.connections.forEach((function(t){if(!t.enabled)return t.enable(),!0})),!1}},{key:"mutateToggleEnable",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;t--;){var e=l(a(this.connections.values()));e.enabled?(e.disable(),e.to.in.some((function(t){return t.enabled}))||e.enable()):e.enable()}return!0}},{key:"mutate",value:function(t,e){var n=!1;Math.random()<(e.mutation.node||0)?n=n||this.mutateAddNode(t):Math.random()<(e.mutation.connection||0)?n=n||this.mutateAddConnection(t,e):(Math.random()<(e.mutation.weight||0)&&this.mutateWeights(e),Math.random()<(e.mutation.toggle||0)&&this.mutateToggleEnable(),Math.random()<(e.mutation.reEnable||0)&&this.mutateReEnable()),n&&this.sortNetwork()}},{key:"graph",value:function(t,e){var n=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{x:0,y:0},o=[];o[0]=this.inputs.map((function(o,r){return o.layer=0,o.vector={x:t*i.x,y:n.inputs.length>1?i.y*e+(1-2*i.y)*e/(n.inputs.length+1)*(r+1):.5*e},o}));var r,s=c(this.hidden);try{for(s.s();!(r=s.n()).done;){var a=r.value,h=a.in.reduce((function(t,e){return Math.max(t,e.from.layer)}),0)+1;a.layer=h,void 0===o[h]&&(o[h]=[]),o[h].push(a)}}catch(t){s.e(t)}finally{s.f()}for(var u=o.length-1,f=1;f<o.length;f++)for(var l=o[f],d=0;d<l.length;d++){var v=l[d];v.vector={x:t*i.x+t*(1-2*i.x)/(u+1)*f,y:l.length>1?i.y*e+(1-2*i.y)*e/(l.length+1)*(d+1):.5*e}}return o.push(this.outputs.map((function(r,s){return r.layer=o.length,r.vector={x:t*(1-i.x),y:n.outputs.length>1?i.y*e+(1-2*i.y)*e/(n.outputs.length+1)*(s+1):.5*e},r}))),o}}],[{key:"crossover",value:function(t,e){if(t.originalFitness<e.originalFitness){var i=t;t=e,e=i}var o=t.originalFitness===e.originalFitness,r=new n;t.nodes.forEach((function(t,e){t.type!==g&&"INPUT"!==t.type&&"OUTPUT"!==t.type||r.nodes.set(e,t.copy())}));var s,h=c(a(new Set([].concat(a(t.connections.keys()),a(e.connections.keys())))).sort((function(t,e){return t-e})));try{for(h.s();!(s=h.n()).done;){var u=s.value,f=t.connections.get(u),l=e.connections.get(u),d=f&&l,v=d?Math.random()>.5?f:l:o?f||l:f;if(v){var m=r.nodes.get(v.from.id);m||(m=v.from.copy(),r.nodes.set(m.id,m));var p=r.nodes.get(v.to.id);if(p||(p=v.to.copy(),r.nodes.set(p.id,p)),!r.isRecurrent(m,p)){var y=v.copy(m,p);y.enable(),!d||f.enabled&&l.enabled||Math.random()<.75&&y.disable(),r.connections.set(u,y)}}}}catch(t){h.e(t)}finally{h.f()}return r.initializeNetwork(),r}},{key:"compatibility",value:function(t,e,n){var i,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=a(t.connections.keys()),s=a(e.connections.keys()),h=new Set([].concat(a(r),a(s))),u=0,f=0,l=[],d=Math.min(Math.max.apply(Math,a(r)),Math.max.apply(Math,a(s))),v=Math.max(r.length,s.length,1),m=c(h);try{for(m.s();!(i=m.n()).done;){var p=i.value,y=t.connections.get(p),g=e.connections.get(p);y&&g?l.push(Math.abs(y.weight-g.weight)):y&&g||(p>d?u++:f++)}}catch(t){m.e(t)}finally{m.f()}var b=l.reduce((function(t,e){return t+e}),0)/l.length||0,w=u*n.excessCoefficient/v+f*n.disjointCoefficient/v+b*n.weightDifferenceCoefficient;return o?{excess:u,disjoint:f,distance:w,weightDiff:b,matching:l.length}:w}}]),n}(),k=function(){function t(n){e(this,t),this.id=t.getId(),this.members=[],this.babies=[],this.add(n),this.specimen=n,this.age=0,this.averageFitness=0,this.bestFitness=0,this.totalFitness=0,this.ageOfLastImprovement=0,this.expectedOffsprings=0,this.color=[50+150*Math.random(),50+150*Math.random(),50+150*Math.random()]}return i(t,null,[{key:"getId",value:function(){return this.id++}}]),i(t,[{key:"add",value:function(t){t.species=this,this.members.push(t)}},{key:"remove",value:function(t){for(var e=0;e<this.members.length;e++)if(this.members[e]===t)return void this.members.splice(e,1)}},{key:"contains",value:function(t,e){return w.compatibility(t,this.specimen,e,!0).distance<e.compatibilityThreshold}},{key:"getChampion",value:function(){return this.members[0]}},{key:"getRandomMember",value:function(){var t,e=this.members.reduce((function(t,e){return t+e.fitness}),0),n=d(0,e),i=0,o=c(this.members);try{for(o.s();!(t=o.n()).done;){var r=t.value;if((i+=r.fitness)>=n)return r}}catch(t){o.e(t)}finally{o.f()}return console.error("no member found"),this.members[0]}},{key:"adjustFitness",value:function(t){this.extinct=this.age-this.ageOfLastImprovement+1>t.dropOffAge,this.totalFitness=0;var e,n=c(this.members);try{for(n.s();!(e=n.n()).done;){var i=e.value;i.originalFitness=i.fitness,this.extinct&&(i.fitness*=.01),this.age<=10&&(i.fitness*=t.ageSignificance),i.fitness/=this.members.length,this.totalFitness+=i.fitness}}catch(t){n.e(t)}finally{n.f()}}},{key:"sort",value:function(){this.members.sort((function(t,e){return e.fitness-t.fitness})),this.specimen=l(this.members),this.members[0].originalFitness>this.bestFitness&&(this.bestFitness=this.members[0].originalFitness,this.ageOfLastImprovement=this.age)}},{key:"cull",value:function(t){for(var e=Math.floor(this.members.length*t.survivalThreshold+1),n=e;n<this.members.length;n++)this.members.splice(n,1),n--}},{key:"reproduce",value:function(e){var n=this,i=e.InnovationHistory,o=e.Config,r=e.champ;this.age++,this.babies=[];var s=this.getChampion(),a=!1;if(0!==this.expectedOffspring)for(var h=function(h){var u=void 0;if(r&&r===s&&r.expectedOffspring>0){var c=r.copy();r.expectedOffspring<1&&c.mutate(i,o),r.expectedOffspring--,u=c}else if(!a&&n.expectedOffspring>5)u=s.copy(),a=!0;else if(Math.random()<o.mutation.mutateOnly){var f=n.getRandomMember().copy();f.mutate(i,o),u=f}else{var l,d=n.getRandomMember();l=Math.random()>o.interspeciesMateRate?n.getRandomMember():e.getRandomSpecies(n).getRandomMember(),u=d===l?d.copy():w.crossover(l,d),(Math.random()>o.mutation.mateOnly||d===l||0===w.compatibility(d,l,o))&&u.mutate(i,o)}if(!e.species.some((function(t){var e=t.contains(u,o);return e&&(u.species=t,t.babies.push(u)),e}))){var v=new t(u);v.babies=[u],e.species.push(v)}},u=0;u<this.expectedOffspring;u++)h()}}]),t}();k.id=0;var M={excessCoefficient:1,disjointCoefficient:1,weightDifferenceCoefficient:.4,compatibilityThreshold:3,compatibilityModifier:.3,compatibilityModifierTarget:5,adjustCompatibilityThreshold:!1,ageSignificance:1,dropOffAge:15,survivalThreshold:.2,fullyConnect:!0,mutation:{node:.03,connection:.05,weight:.8,weightPerturbed:.9,mutateOnly:.25,mateOnly:.2,power:2.5,maxWeight:8,toggle:0,reEnable:0},interspeciesMateRate:.001},O=function(){function t(n,i){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};e(this,t),this.InnovationHistory=new f(n+i+1),this.size=o,this.species=[],this.genomes=[],this.generation=0,this.fitnessFunction=r,this.Config=s(s({},M),a);for(var h=0;h<this.size;h++){var u=new w;this.Config.fullyConnect?u.buildNetwork(n,i,this.InnovationHistory,this.Config):(u.buildNetwork(n,i),u.mutateAddConnection(this.InnovationHistory,this.Config)),this.genomes.push(u)}if(this.genomes.length&&this.speciate(),this.genomes.length>1){var c=this.getSuperChamp();this.champ=c.copy(),this.champ.species=c.species}}return i(t,[{key:"remove",value:function(t){for(var e=0;e<this.genomes.length;e++)if(this.genomes[e]===t)return void this.genomes.splice(e,1)}},{key:"calculateFitness",value:function(){var t=this;this.genomes.forEach((function(e){e.fitness=t.fitnessFunction(e)}))}},{key:"classify",value:function(t){var e=this;if(!this.species.some((function(n){var i=n.contains(t,e.Config);return i&&n.add(t),i}))){var n=new k(t);this.species.push(n)}}},{key:"getRandomSpecies",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=this.species;this.species.length>1&&t&&(e=this.species.filter((function(e){return e!==t})));var n,i=e.reduce((function(t,e){return t+e.bestFitness}),0),o=d(0,i),r=0,s=c(e);try{for(s.s();!(n=s.n()).done;){var a=n.value;if((r+=a.bestFitness)>=o)return a}}catch(t){s.e(t)}finally{s.f()}return console.error("no species found"),e[0]}},{key:"getSuperChamp",value:function(){return this.genomes.reduce((function(t,e){return e.fitness>t.fitness?e:t}))}},{key:"epoch",value:function(){this.calculateFitness(),this.Config.adjustCompatibilityThreshold&&this.species.length!==this.Config.compatibilityModifierTarget&&(this.Config.compatibilityThreshold+=-this.Config.compatibilityModifier*(this.species.length>this.Config.compatibilityModifierTarget?-1:1),this.Config.compatibilityThreshold=Math.max(this.Config.compatibilityThreshold,this.Config.compatibilityModifier)),this.champ=this.getSuperChamp(),this.overallAverage=0;for(var t=0;t<this.species.length;t++){var e=this.species[t];0!==e.members.length?(e.adjustFitness(this.Config),e.sort(),e.cull(this.Config),this.overallAverage+=e.totalFitness):(this.species.splice(t,1),t--)}var n=this.genomes.reduce((function(t,e){return t+e.fitness}),0)/this.genomes.length;this.champ.expectedOffspring=this.champ.fitness/n,this.species.sort((function(t,e){return e.bestFitness-t.bestFitness}));var i,o=c(a(this.species));try{for(o.s();!(i=o.n()).done;){var r=i.value;r.expectedOffspring=Math.round(r.totalFitness/this.overallAverage*this.size),r.reproduce(this)}}catch(t){o.e(t)}finally{o.f()}this.genomes=[];for(var s=0;s<this.species.length;s++){var h,u=this.species[s];u.members=a(u.babies),u.babies=[],0!==u.members.length?(h=this.genomes).push.apply(h,a(u.members)):(this.species.splice(s,1),s--)}for(;this.genomes.length<this.size;){var f=this.getRandomSpecies().getRandomMember().copy();f.mutate(this.InnovationHistory,this.Config),this.classify(f),this.genomes.push(f)}for(;this.genomes.length>this.size;){var d=l(this.genomes);d.species.remove(d),this.remove(d)}return this.generation++,!0}},{key:"speciate",value:function(){var t,e=c(this.genomes);try{for(e.s();!(t=e.n()).done;){var n=t.value;this.classify(n)}}catch(t){e.e(t)}finally{e.f()}}}]),t}();export{M as Config,p as Connection,w as Genome,f as InnovationHistory,y as Node,O as Population,k as Species,b as types,m as utils};
